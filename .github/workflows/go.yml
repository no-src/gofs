# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    strategy:
      matrix:
        go: [ '1.21', '1.22' ]
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Init Env
        run: chmod +x ./scripts/init-env.sh && ./scripts/init-env.sh
        if: matrix.os != 'windows-latest'

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v -race ./... -coverprofile=coverage.txt -covermode=atomic -timeout=10m

      - name: Test Encrypt
        run: go test -v -race -tags=encrypt_test ./encrypt

      - name: Test Integration
        run: go test -v -race -tags=integration_test ./integration

      - name: Test Integration Task
        run: go test -v -race -tags=integration_test_task ./integration

      - name: Install and mount MinIO
        run: chmod +x ./scripts/minio/*.sh && ./scripts/minio/install-minio.sh && ./scripts/minio/mount-minio.sh
        if: matrix.os == 'ubuntu-latest'

      - name: Test Integration MinIO
        run: go test -v -race -tags=integration_test_minio ./integration
        if: matrix.os == 'ubuntu-latest'

      - name: Init SFTP
        run: chmod +x ./scripts/sftp/*.sh && ./scripts/sftp/init-sftp.sh
        if: matrix.os == 'ubuntu-latest'

      - name: Test Integration SFTP
        run: go test -v -race -tags=integration_test_sftp ./integration
        if: matrix.os == 'ubuntu-latest'

      - name: Codecov
        uses: codecov/codecov-action@v4
        if: matrix.os == 'ubuntu-latest' && matrix.go == '1.21'